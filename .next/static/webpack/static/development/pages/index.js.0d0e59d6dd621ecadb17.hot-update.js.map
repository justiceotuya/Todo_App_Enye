{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.0d0e59d6dd621ecadb17.hot-update.js","sources":["webpack:///./components/Todo/Todo.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport styles from './Todo.module.css';\r\nimport TodoList from '../TodoList/TodoList';\r\nimport TodoForm from '../TodoForm/TodoForm';\r\nimport PropTypes from 'prop-types';\r\nclass Todo extends Component {\r\n\tgetInitialProps = async function() {\r\n\t\tconst res = await fetch('http://localhost:5000/');\r\n\t\tconst data = await res.json();\r\n\r\n\t\tthis.setState({\r\n\t\t\ttodoItems: data.items\r\n\t\t});\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tinputValue: ''\r\n\t\t};\r\n\r\n\t\tthis.handleInputChange = this.handleInputChange.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t\tthis.handleDeleteItem = this.handleDeleteItem.bind(this);\r\n\t\tthis.handleDeleteItemWithEnterKey = this.handleDeleteItemWithEnterKey.bind(this);\r\n\t\tthis.getInitialProps = this.getInitialProps.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// fetch('http://localhost:5000/', {\r\n\t\t// \theaders: {\r\n\t\t// \t\t'Content-Type': 'application/json',\r\n\t\t// \t\tAccept: 'application/json'\r\n\t\t// \t}\r\n\t\t// })\r\n\t\t// \t.then(res => {\r\n\t\t// \t\treturn res.json();\r\n\t\t// \t})\r\n\t\t// \t.then(data => {\r\n\t\t// \t\tthis.setState({\r\n\t\t// \t\t\ttodoItems: [...this.state.todoItems, ...data.items]\r\n\t\t// \t\t});\r\n\t\t// \t\tconsole.log('data', data.items);\r\n\t\t// \t});\r\n\r\n\t\tthis.getInitialProps();\r\n\t}\r\n\r\n\t//get the value from the todo form\r\n\thandleInputChange = e => {\r\n\t\tthis.setState({\r\n\t\t\tinputValue: event.target.value\r\n\t\t});\r\n\t};\r\n\r\n\t//handle submiting of todo item\r\n\thandleSubmit = e => {\r\n\t\t//prevent default form submit action\r\n\t\te.preventDefault();\r\n\t\t//check if the something iw written down in the input box and only add the item to the list. so empty items cannot be added\r\n\t\tif (this.state.inputValue !== '') {\r\n\t\t\tthis.setState({\r\n\t\t\t\ttodoItems: [...this.state.todoItems, this.state.inputValue],\r\n\t\t\t\t// set the input value to epmty\r\n\t\t\t\tinputValue: ''\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\t// handle deleting of an item\r\n\thandleDeleteItem = (index, e) => {\r\n\t\t// remove the item from the todo List\r\n\t\tthis.state.todoItems.splice(index, 1);\r\n\t\t// set todo item to modified list\r\n\t\tthis.setState({\r\n\t\t\ttodoItems: [...this.state.todoItems]\r\n\t\t});\r\n\t};\r\n\r\n\t//for accessibility, this function deletes item from the list with an enter key\r\n\thandleDeleteItemWithEnterKey = (index, e) => {\r\n\t\tif (e.key === 'Enter') {\r\n\t\t\t// calls the delete function when enter key is pressed\r\n\t\t\tthis.handleDeleteItem(index);\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { main, Todo } = styles;\r\n\t\tconst { todoItems, inputValue, checked } = this.state;\r\n\t\treturn (\r\n\t\t\t<main className={main}>\r\n\t\t\t\t<section className={Todo}>\r\n\t\t\t\t\t<TodoList\r\n\t\t\t\t\t\ttodoItems={todoItems}\r\n\t\t\t\t\t\tchecked={checked}\r\n\t\t\t\t\t\tdeleteItem={this.handleDeleteItem}\r\n\t\t\t\t\t\tdeleteItemWithEnterKey={this.handleDeleteItemWithEnterKey}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<TodoForm changeInput={this.handleInputChange} addTodoItem={this.handleSubmit} inputValue={inputValue} />\r\n\t\t\t\t</section>\r\n\t\t\t</main>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Todo;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;AAUA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAEA;AACA;AADA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AAoCA;AACA;AADA;AAGA;AACA;AAxCA;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAtDA;AAyDA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAhEA;AAmEA;AACA;AACA;AACA;AACA;AACA;AArEA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AAXA;AAYA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAwCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAnGA;AACA;AAqGA;;;;A","sourceRoot":""}